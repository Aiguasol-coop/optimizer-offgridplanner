apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.project.name }}-worker-supply
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: {{ .Values.project.name }}-worker-supply
  template:
    metadata: 
      annotations:
        redeploy-timestamp: "{{ .Values.forceRedeploy }}"
      labels: 
        app: {{ .Values.project.name }}-worker-supply
    spec:
      initContainers:
        - name: {{ .Values.project.name }}-wait-for-redis
          image: busybox:1.34
          command:
            - sh
            - -c
            - |
              echo "Waiting for redis..."
              until nc -z potential-optimizer-redis 6379; do
                sleep 1
              done
              echo "Redis is up!"
      containers:
      - name: {{ .Values.project.name }}-worker-supply
        image: {{ .Values.worker_supply.image.repository }}:{{ .Values.worker_supply.image.tag}}
        imagePullPolicy: {{ .Values.worker_supply.image.pullPolicy }}
        env:
          - name: CELERY_BROKER_URL
            value: {{ .Values.worker_supply.CELERY_BROKER_URL }}
          - name: CELERY_RESULT_BACKEND
            value: {{ .Values.worker_supply.CELERY_RESULT_BACKEND }}
          - name: CELERY_TASK_NAME
            value: {{ .Values.worker_supply.CELERY_TASK_NAME }}
          - name: CELERY_CONCURRENCY
            value: {{ .Values.worker_supply.CELERY_CONCURRENCY}}
      imagePullSecrets:
        - name: docker-registry-login
      restartPolicy: Always